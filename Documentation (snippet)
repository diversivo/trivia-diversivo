DIVERSIVO TRIVIA - DOCUMENTATION FOR DEVELOPERS
===============================================
(by aerojas - v1.0 Nov.19,2018)


1. What is this
===============
Diversivo Trivia is a simple game where a contestant is shown a set of cards, initially showing just an image. The contest
operator can click a card, making the card flip, showing a question. The contestant tries to answer the question shown in the card,
then the operator clicks the card again, making it flip, and showing the answer. The operator validates if the answer given by the
contestant is correct or not, and act accordingly.

2. How it works
===============
The typical use case of this game is in a public contest (stage, relatively big screen, the contestant is someone from the public),
where at least two actors participate: the contestant and a operator. The operator makes the interaction with the game, while
the contestant doesn't interact with the application, just participates. The operator and the contestant interact with each other
(or through a host) in the context of the contest, and the former is responsible to conduct the flow of the game in the correct order.

The game, seen as an application, just has two states: the menu and the game loop. Inside the game loop, there could be levels,
which could be considered substates of the latter.

3. The menu 
===============
The menu element is the first element shown to the operator. It includes very few options in form of buttons, like 'Play' and 'About'. The
'Play' option launches the game screen, while the 'About' option shows an informational pop-up containing the name of the game, the authors
and other interesting stuff, like links.

4. The game
===============
When the operator clicks 'Play' on the menu, the page hides the menu and shows the game. This trivia game consists
in a set of cards (usually between 3 and 5, configurable via a config file), which are clickable, disposed in a grid. Each card contains a question, taken from a predefined
set of questions in random order, and its respective answer, initially saved in a JS object (it is considered to read the questions from an
actual JSON file in the near future while figuring the best way to do it). The operator can click each card to show the question,
waits for the contestante to try to answer, and then clicks again to show the answer. The cards can be clicked in no particular order.

There is no countdown when playing the game, so the contestant can take all the time he/she wants to play it.

The game screen should provide a way to the operator to end the game for the contestant, as victory or game over, depending of the questions
correctly answered by the contestant and the specific rules of the contest. In both cases, the termination of the game should return the
operator to the menu.

5. Points vs no points mode
===========================
(NOTE: the Points mode is not in consideration by now, just making the default no points mode, and doesn't fit the typical use case anyway. This
section is not deleted just to keep the idea just in case will be needed in future versions or variations)

The default mode is no points mode. In this mode, the cards only show their question and answer when clicked, with
no reward to the user if he/she answers correctly.

The other (planned) mode is Points mode. In this mode, when the user clicks the card and its question is shown, the
user is also presented with a set of possible answers. If the correct answer is selected, a number of points are added
to the user's score. If the incorrect answer is selected, no points are added (or substracted).

6. The card element
===================
A card is a single rectangular element on the game screen which contains a question and its answer. It's clickable and
should show an animation when clicked, like flipping the card. A card has three states: covered, showing the question,
and showing the answer.

- Covered: the initial state of the card. It just shows an image, like a logo, resembling a cards' back, where the
relevant content is hidden.

- Showing the question: the state after a Covered card is clicked on. It shows a white background with text in the center;
the text is the question that the user must answer. If Points mode is implemented and enabled, the points the card is worth
are shown as a number within a circle in the upper right corner of the card. Also, when Points mode is enabled, a little
menu with three options is shown next to the card. The user must click one of the available choices in order to answer the
question, making the card flip again, show the answer and add the points if needed. If No Points mode is enabled, the user
just needs to click the card directly to show the answer.

- Showing the answer: the final state of the card. It shows a white background with text in the center. Optionally, if Poitents
mode is enabled, the card/text combo can show different colors depending if the user answered correctly or not. When a card
in this state is clicked, it does nothing. The answer is kept shown until the user restarts the game.

7. The questions file
=====================

The questions file is a JSON formatted text file which contains an array of Question objects. Each Question object contains
four elements:

- Question: The question text
- Answer: The answer text
- Options: If Points mode is enabled, an array of possible choices to answer the question. One of the choices should be identical
to the value of Answer.
- Points: How many points are awarded to the user if answered the question correctly.
